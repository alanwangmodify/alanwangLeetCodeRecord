/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {

        ListNode *head = new ListNode(-1); //用于t后移后能找回头节点
        ListNode *t = head;
        
        while  (l1 || l2) {
            if (l1 == nullptr) {
                t->next = l2;
                return head->next;
            }
            if (l2 == nullptr) {
                t->next = l1;
                return head->next;

            }
            if (l1->val < l2->val) {
                t->next = l1;
                l1 = l1->next;
            }else {
                t->next = l2;
                l2 = l2->next;
            }
            t = t->next;//往后移一位
        } 
        return head->next;
    }
};
